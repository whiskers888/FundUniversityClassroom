version: "3.8"

services:
  #Сервисы
  service_housing:
    build:
      context: .
      dockerfile: ./Service.Housing/Dockerfile
    ports:
      # - "5000:5000"
      - "5001:5001"
    environment:
      - ASPNETCORE_URLS=http://+:5001
      - ConnectionStrings__DefaultConnection=Server=db_housing;Port=5432;Database=acchousing;User Id=postgres;Password=postgres;
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__UserName=admin
      - RabbitMQ__Password=password
    depends_on:
      - db_housing
      - rabbitmq
    networks:
      - general
    command: >
      sh -c " dotnet Service.Housing.dll"

  service_audience:
    build:
      context: .
      dockerfile: ./Service.Audience/Dockerfile
    ports:
      # - "5002:5002"
      - "5003:5003"
    environment:
      - ASPNETCORE_URLS=http://+:5003
      - ConnectionStrings__DefaultConnection=Server=db_audience;Port=5433;Database=accaudience;User Id=postgres;Password=postgres;
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__UserName=admin
      - RabbitMQ__Password=password
    depends_on:
      - db_audience
      - rabbitmq
    networks:
      - general
    command: >
      sh -c " dotnet Service.Audience.dll"

  service_notification:
    build:
      context: .
      dockerfile: ./Service.Notification/Dockerfile
    ports:
      # - "5004:5004"
      - "5005:5005"
    environment:
      - ASPNETCORE_URLS=http://+:5005
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__UserName=admin
      - RabbitMQ__Password=password
    depends_on:
      - rabbitmq
    networks:
      - general
    command: >
      sh -c " dotnet Service.Notification.dll"

  #Базы данных
  db_housing:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=acchousing
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - db_data_housing:/var/lib/postgresql/data
    networks:
      - general
    command: ["postgres", "-p", "5432"]

  db_audience:
    image: postgres:latest
    ports:
      - "5433:5433"
    environment:
      - POSTGRES_DB=accaudience
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - db_data_audience:/var/lib/postgresql/data
    networks:
      - general
    command: ["postgres", "-p", "5433"]

  # Вспомогательные инструменты
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=password
    volumes:
      - data_rabbitmq:/var/lib/rabbitmq
    networks:
      - general

  nginx:
    build:
      context: ./nginx
      dockerfile: ./Dockerfile
    container_name: production_nginx
    ports:
      - 80:80
      - 443:443
    networks:
      - general

volumes:
  db_data_housing:
  db_data_audience:
  data_rabbitmq:

networks:
  general:
    driver: bridge
